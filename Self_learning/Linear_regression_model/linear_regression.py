# -*- coding: utf-8 -*-
"""Linear_regression

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MOZKVniyHH7yBqaM0joOY2WeFssNQDvp
"""

#Import libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/Ecommerce Customers')
df.head()

df.info()

df.describe()

sns.jointplot(x='Time on Website',y='Yearly Amount Spent',data=df)

sns.jointplot(x='Time on App',y='Yearly Amount Spent',data=df, alpha=0.5)

sns.pairplot(df, kind='scatter', plot_kws={'alpha':0.4})

sns.lmplot(x='Length of Membership',
           y='Yearly Amount Spent',
           data=df,
           scatter_kws={'alpha': 0.3})

from sklearn.model_selection import train_test_split

X = df[['Avg. Session Length', 'Time on App', 'Time on Website', 'Length of Membership']]
y = df['Yearly Amount Spent']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

#Training the model
from sklearn.linear_model import LinearRegression

lm = LinearRegression()

lm.fit(X_train, y_train)

lm.coef_

cdf = pd.DataFrame(lm.coef_, X.columns, columns=['Coeff'])
print(cdf)

#Predictions
predictions = lm.predict(X_test)
predictions

sns.scatterplot(x=predictions, y=y_test)
plt.xlabel('Predictions')
plt.ylabel('Evaluation of our ML model')

from sklearn.metrics import mean_absolute_error, mean_squared_error
import math

print('Mean Absolute Error: ', mean_absolute_error(y_test, predictions))
print('Mean Squared Error: ', mean_squared_error(y_test, predictions))
print('Root Mean Squared Error: ', math.sqrt(mean_squared_error(y_test, predictions)))

#residuals
residuals = y_test - predictions
sns.displot(residuals, bins=20, kde=True)

import pylab
import scipy.stats as stats

stats.probplot(residuals, dist="norm", plot=pylab)
pylab.show()